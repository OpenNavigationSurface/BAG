skip_tags: true
skip_commits:
  files:
    - docs/**
    - '.github/workflows/*'
    - readme.*
    - '*.md'

environment:

  matrix:

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      VS_VERSION: Visual Studio 16
      platform: x64
      VS: 2019
      PYTHON_VERSION: 3.8
      PYTHON_ARCH: x64
      MINICONDA: C:\Miniconda38-x64

matrix:

  allow_failures:

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      VS_VERSION: Visual Studio 15
      platform: x64
      PYTHON_VERSION: 3.7
      PYTHON_ARCH: x64
      MINICONDA: C:\Miniconda37-x64

install:
  - set PATH=%MINICONDA%;%MINICONDA%\Scripts;%PATH%
  # Install the build and runtime dependencies of the project.
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - conda config --add channels conda-forge
  - conda create -q -n test-environment python=%PYTHON_VERSION%
  - activate test-environment
  - conda install cmake ninja hdf5 libxml2 swig catch2 unittest-xml-reporting pytest pytest-cov pytest-xdist
  - conda list --show-channel-urls
  # Check that we have the expected version of Python
  - python --version
  - if %VS%==2019 call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
  - if %VS%==2017 call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"

build: off

build_script:
  - set CC=cl.exe
  - set CXX=cl.exe
  - cd
  - cmake -Bbuild -S. -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=\install -DHDF5_ROOT=%CONDA_PREFIX%\Library -DBAG_BUILD_SWIG:BOOL=ON -DBAG_BUILD_PYTHON=ON -DBAG_CI=ON
  - cmake --build build
  - set PATH=C:\projects\bag\build\api;%PATH%
  - set BAG_SAMPLES_PATH=C:\projects\bag\examples\sample-data
  - build\tests\bag_tests.exe
  - python build\api\swig\python\setup.py install
  - copy build\api\baglib.dll "%MINICONDA%"\envs\test-environment\baglib.dll
  - pytest --cov=bagPy --cov-branch --cov-report=xml --junitxml=python-test-results.xml python

deploy: off

