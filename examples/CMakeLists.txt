cmake_minimum_required (VERSION 2.6)
PROJECT (OPENNS_EXAMPLES)

#-----------------------------------------------------------------------------
# Setup include Directories
#-----------------------------------------------------------------------------
include_directories(${OPENNS_SOURCE_DIR}/api ${HDF5_INCLUDE_DIR} ${LIBXML_INCLUDE_DIR})

IF(MSVC)

    #ignore some warnings generated by windows.
    add_definitions(/D_CRT_SECURE_NO_WARNINGS /D _CRT_NONSTDC_NO_DEPRECATE)
    #definition required by HDF5 lib
    add_definitions(-D H5_BUILT_AS_DYNAMIC_LIB)    
    
	#if we are building a shared library, then we need to define this symbol.
	IF(BUILD_SHARED_LIBS)
		add_definitions(/D BAG_DLL)
	ENDIF(BUILD_SHARED_LIBS)
	
	#if we are building against a shared HDF5, then we need to define this symbol.
	IF(BUILD_WITH_SHARED_HDF5)
		add_definitions(/D _HDF5USEDLL_)
		add_definitions(-D H5_BUILT_AS_DYNAMIC_LIB)
	ENDIF(BUILD_WITH_SHARED_HDF5)

ENDIF(MSVC)

#-----------------------------------------------------------------------------
# Define Sources
#-----------------------------------------------------------------------------
SET (examples
    bag_create
	bag_vr_create
    bag_gencert
    bag_read
	bag_vr_read
    bag_signcert
    bag_signfile
    bag_verifycert
    bag_verifyfile
)

#link_directories(/Users/brc/lib)

FOREACH (example ${examples})
  
    ADD_EXECUTABLE (${example} ${example}.c getopt.c excertlib.cpp)
    SET_TARGET_PROPERTIES (${example} PROPERTIES FOLDER examples)
    
    #Link with the bag library.
    TARGET_LINK_LIBRARIES(${example} bag)
    
    #Add the '_debug' postfix to the samples.
    SET_TARGET_PROPERTIES( ${example}
        PROPERTIES
        DEBUG_OUTPUT_NAME ${example}_debug
        RELEASE_OUTPUT_NAME ${example}
    )

#    IF(NOT MSVC)
#        set(CMAKE_EXE_LINKER_FLAGS "-static-libgcc -static-libstdc++")
#    ENDIF()


    INSTALL(TARGETS ${example} RUNTIME DESTINATION bin)

ENDFOREACH (example ${examples})
