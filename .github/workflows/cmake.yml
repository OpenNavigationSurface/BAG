name: CMake

on:
  push:
    paths-ignore:
      - 'docs/**'
      - appveyor.yml
      - readme.*
    branches: [ "master" ]
  pull_request:
    paths-ignore:
      - 'docs/**'
      - appveyor.yml
      - readme.*
    branches: [ "master", "v2" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        os: [ubuntu-20.04]
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{matrix.os}}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
        bash miniconda.sh -b -p ${{github.workspace}}/miniconda
        source "${{github.workspace}}/miniconda/etc/profile.d/conda.sh"
        hash -r
        conda config --set always_yes yes --set changeps1 no
        conda config --add channels conda-forge
        conda update -q conda
        conda info -a
        conda create -q -n test-environment python=${{matrix.python-version}}
        conda activate test-environment
        conda install clang gxx_linux-64 cmake ninja hdf5-static libxml2 swig catch2
        conda list --show-channel-urls

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        source "${{github.workspace}}/miniconda/etc/profile.d/conda.sh"
        hash -r
        conda activate test-environment
        cmake -G Ninja -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -B build -S . -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/miniconda/envs/test-environment -DBAG_BUILD_SWIG:BOOL=ON -DBAG_BUILD_PYTHON:BOOL=ON

    - name: Build
      # Build your program with the given configuration
      source "${{github.workspace}}/miniconda/etc/profile.d/conda.sh"
      hash -r
      conda activate test-environment
      run: cmake --build build
    
    - name: Install
      # Install into conda environment
      run: |
        source "${{github.workspace}}/miniconda/etc/profile.d/conda.sh"
        hash -r
        conda activate test-environment
        cmake --install ${{github.workspace}}/build
        python ./build/api/swig/python/setup.py install

    - name: Tests
      working-directory: ${{github.workspace}}/build
      # Execute C++ tests
      run: |
        source "${{github.workspace}}/miniconda/etc/profile.d/conda.sh"
        hash -r
        conda activate test-environment
        BAG_SAMPLES_PATH=${{github.workspace}}/examples/sample-data ./build/tests/bag_tests
        python ./python/test_all.py
      
