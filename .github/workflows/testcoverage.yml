name: Test Coverage

on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - appveyor.yml
      - readme.*
    branches: [ "master", "v2" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  CC: clang
  CXX: clang++

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04]
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{matrix.os}}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        bash ./scripts/install-dependencies-cov.sh

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        export CC=${{env.CC}}
        export CXX=${{env.CXX}}
        cmake -G Ninja -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -B build -S . -DCMAKE_INSTALL_PREFIX=/usr/local -DBAG_BUILD_TESTS:BOOL=ON -DCODE_COVERAGE:BOOL=ON

    - name: Build
      # Build your program with the given configuration
      run: |
        export CC=${{env.CC}}
        export CXX=${{env.CXX}}
        cmake --build build

    - name: Run Tests
      run: |
        BAG_SAMPLES_PATH=${{github.workspace}}/examples/sample-data ./build/tests/bag_tests_d -r junit -o build/tests/bag_tests-testreport.xml

    - name: Test Reporter
      uses: mikepenz/action-junit-report@v3
      if: always() # always run even if the previous step fails
      with:
        report_paths: './build/tests/*-testreport.xml'

    - name: Run Test Coverage
      # Execute C++ tests
      run: |
        BAG_SAMPLES_PATH=${{github.workspace}}/examples/sample-data ninja -C build ccov-all-export-lcov

    - name: Test Coverage Reporter
      uses: vebr/jest-lcov-reporter@v0.2.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        lcov-file: ./build/ccov/lcov.info
